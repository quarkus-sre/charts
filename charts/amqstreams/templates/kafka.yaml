{{- if .Values.enabled }}
{{- if .Values.kafka }}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ .Values.kafka.name }}
  namespace: {{ .Values.kafka_namespace }}
  {{- with .Values.kafka.labels }}
  labels:
    {{- . | toYaml | trim | nindent 4 }}
  {{- end }}
spec:
  kafka:
    version: {{ .Values.kafka.version }}
    replicas: {{ .Values.kafka.replicas }}
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.6"
    storage:
      {{- if .Values.kafka.storage }}
      type: {{ .Values.kafka.storage.type }}
      size: {{ .Values.kafka.storage.size }}
      deleteClaim: false
      {{ else }}
      type: ephemeral
      {{ end }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: {{ .Values.metrics.configmap.name }}
          key: {{ .Values.metrics.configmap.kafka.key }}
  {{- if .Values.zookeeper }}
  zookeeper:
    replicas: {{ .Values.zookeeper.replicas }}
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    storage:
      {{- if .Values.zookeeper.storage }}
      type: {{ .Values.zookeeper.storage.type }}
      size: {{ .Values.zookeeper.storage.size }}
      deleteClaim: false
      {{ else }}
      type: ephemeral
      {{ end }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: {{ .Values.metrics.configmap.name }}
          key: {{ .Values.metrics.configmap.zookeeper.key }}
    {{- end }}
  entityOperator:
    topicOperator: {}
    userOperator: {}
  {{- if .Values.kafka.kafkaexporter }}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
  {{- end }}
{{- end }}
{{- end }}
